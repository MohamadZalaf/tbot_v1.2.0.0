#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ุงุณุชุฎุฑุงุฌ ูุณุจุฉ ุงููุฌุงุญ ูู ูุต ุงูุฐูุงุก ุงูุงุตุทูุงุนู
"""

import re

def _extract_success_rate_from_ai(text: str) -> float:
    """ุงุณุชุฎุฑุงุฌ ูุณุจุฉ ุงููุฌุงุญ ุงููุญุฏุฏุฉ ูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู"""
    try:
        # ุงูุจุญุซ ุนู ูุต "ูุณุจุฉ ูุฌุงุญ ุงูุตููุฉ" ูุชุจูุนุงู ุจุฑูู ููุณุจุฉ ูุฆููุฉ
        patterns = [
            r'ูุณุจุฉ ูุฌุงุญ ุงูุตููุฉ:?\s*(\d+)%',
            r'ูุณุจุฉ ุงููุฌุงุญ:?\s*(\d+)%',
            r'ุงุญุชูุงููุฉ ุงููุฌุงุญ:?\s*(\d+)%',
            r'ูุนุฏู ุงููุฌุงุญ:?\s*(\d+)%',
            r'success rate:?\s*(\d+)%',
            r'ูุณุจุฉ\s+ูุฌุงุญ\s+(?:ุงูุตููุฉ|ุงูุชุฏุงูู):?\s*(\d+)%',
            # ุงูุจุญุซ ูู ููุงูุฉ ุงููุต
            r'ุงููุณุจุฉ:?\s*(\d+)%',
            r'ุงูุชููุน:?\s*(\d+)%'
        ]
        
        for pattern in patterns:
            matches = re.findall(pattern, text, re.IGNORECASE | re.UNICODE)
            if matches:
                success_rate = float(matches[-1])  # ุฃุฎุฐ ุขุฎุฑ ูุชูุฌุฉ
                # ุงูุชุฃูุฏ ูู ุฃู ุงููุณุจุฉ ูู ุงููุทุงู ุงููุทููุจ
                if 10 <= success_rate <= 95:
                    print(f"โ ุชู ุงุณุชุฎุฑุงุฌ ูุณุจุฉ ูุฌุงุญ ูู AI: {success_rate}%")
                    return success_rate
        
        # ุงูุจุญุซ ุนู ุฃุฑูุงู ูู ููุงูุฉ ุงููุต (ุขุฎุฑ 200 ุญุฑู)
        text_end = text[-200:].lower()
        numbers_at_end = re.findall(r'(\d+)%', text_end)
        
        for num_str in reversed(numbers_at_end):  # ุงูุจุฏุก ูู ุงูููุงูุฉ
            num = float(num_str)
            if 10 <= num <= 95:
                print(f"โ ุชู ุงุณุชุฎุฑุงุฌ ูุณุจุฉ ูู ููุงูุฉ ุงููุต: {num}%")
                return num
        
        # ุฅุฐุง ูู ูุฌุฏ ุดูุฆุงู ูุญุฏุฏุงู
        return None
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุณุชุฎุฑุงุฌ ูุณุจุฉ ุงููุฌุงุญ ูู AI: {e}")
        return None

# ุฃูุซูุฉ ููุงุฎุชุจุงุฑ
test_examples = [
    """
    ุจูุงุกู ุนูู ุงูุชุญููู ุงูููู ุงูุดุงูู:
    - RSI ูู ููุทูุฉ ุฌูุฏุฉ (65)
    - MACD ุฅูุฌุงุจู ูููู ุงูุฅุดุงุฑุฉ
    - ุญุฌู ุชุฏุงูู ุนุงูู
    - ุงูุงุชุฌุงู ุงูุนุงู ุตุงุนุฏ
    
    ุงูุชูุตูุฉ: ุดุฑุงุก
    ูุณุจุฉ ูุฌุงุญ ุงูุตููุฉ: 78%
    """,
    
    """
    ุงูุชุญููู ูุดูุฑ ุฅูู ูุฑุตุฉ ุจูุน ูููุฉ:
    โข ุงููุคุดุฑุงุช ุชุฏุนู ุงููุจูุท
    โข ูุณุชูู ููุงููุฉ ููู
    โข ุฃุฎุจุงุฑ ุณูุจูุฉ ูุชููุนุฉ
    
    ูุนุฏู ุงููุฌุงุญ: 85%
    """,
    
    """
    ุชุญููู ูุชุญูุธ ููุฒูุฌ:
    - ุฅุดุงุฑุงุช ูุชุถุงุฑุจุฉ
    - ุชููุจุงุช ุนุงููุฉ
    - ุนุฏู ูุถูุญ ุงูุงุชุฌุงู
    
    ุงุญุชูุงููุฉ ุงููุฌุงุญ: 45%
    """,
    
    """
    Strong bullish signal detected.
    Technical indicators align perfectly.
    Success rate: 82%
    """
]

print("๐งช ุงุฎุชุจุงุฑ ุงุณุชุฎุฑุงุฌ ูุณุจุฉ ุงููุฌุงุญ ูู ูุตูุต ุงูุฐูุงุก ุงูุงุตุทูุงุนู\n")
print("=" * 60)

for i, example in enumerate(test_examples, 1):
    print(f"\n๐ ูุซุงู {i}:")
    print("-" * 40)
    success_rate = _extract_success_rate_from_ai(example)
    if success_rate:
        print(f"โ ุงููุชูุฌุฉ: {success_rate}%")
    else:
        print("โ ูู ูุชู ุงูุนุซูุฑ ุนูู ูุณุจุฉ ูุฌุงุญ ุตุญูุญุฉ")
    print()

print("=" * 60)
print("๐ ููุฎุต: ุงููุธุงู ุงูุฌุฏูุฏ ูุณุชุฎุฑุฌ ูุณุจุฉ ุงููุฌุงุญ ูู ุชุญููู Gemini AI")
print("๐ฏ ูุฐุง ูุนูู ุฃู ูู ุชุญููู ุณูุญุตู ุนูู ูุณุจุฉ ูุฌุงุญ ูุฎุตุตุฉ ููุญุณูุจุฉ!")